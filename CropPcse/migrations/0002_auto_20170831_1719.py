# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-08-31 16:19
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('simulation', '0014_feed_avaliable'),
        ('CropPcse', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CropInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterModelOptions(
            name='pcsecropparameters',
            options={'verbose_name_plural': 'crop parameter sets'},
        ),
        migrations.AlterModelOptions(
            name='pcsesiteparameters',
            options={'verbose_name_plural': 'site parameter sets'},
        ),
        migrations.AlterModelOptions(
            name='pcsesoilparameters',
            options={'verbose_name_plural': 'soil parameter sets'},
        ),
        migrations.AlterField(
            model_name='pcsesiteparameters',
            name='IRRIGF',
            field=models.BooleanField(help_text='irrigated up to saturation(mimicing flooding)'),
        ),
        migrations.AlterField(
            model_name='pcsesiteparameters',
            name='WCI',
            field=models.FloatField(help_text='Initial water content in cm3 of water/(cm3 of soil).'),
        ),
        migrations.AlterField(
            model_name='pcsesiteparameters',
            name='WCSUBS',
            field=models.FloatField(help_text='water content subsoil'),
        ),
        migrations.AlterField(
            model_name='pcsesiteparameters',
            name='WMFAC',
            field=models.BooleanField(help_text='irrigated to field capacity'),
        ),
        migrations.AlterField(
            model_name='pcsesoilparameters',
            name='DRATE',
            field=models.FloatField(help_text='Maximum drainage rate of the soil (mm/day)'),
        ),
        migrations.AlterField(
            model_name='pcsesoilparameters',
            name='WCAD',
            field=models.FloatField(help_text='Water content at air dry'),
        ),
        migrations.AlterField(
            model_name='pcsesoilparameters',
            name='WCFC',
            field=models.FloatField(help_text='Water content at field capacity'),
        ),
        migrations.AlterField(
            model_name='pcsesoilparameters',
            name='WCST',
            field=models.FloatField(help_text='Water content at saturation'),
        ),
        migrations.AlterField(
            model_name='pcsesoilparameters',
            name='WCWET',
            field=models.FloatField(help_text='Water content at above which oxygen stress occurs'),
        ),
        migrations.AlterField(
            model_name='pcsesoilparameters',
            name='WCWP',
            field=models.FloatField(help_text='Water content at wilting point'),
        ),
        migrations.AlterUniqueTogether(
            name='pcsesiteparameters',
            unique_together=set([]),
        ),
        migrations.AlterUniqueTogether(
            name='pcsesoilparameters',
            unique_together=set([]),
        ),
        migrations.AddField(
            model_name='cropinstance',
            name='crop',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='CropPcse.PCSECropParameters'),
        ),
        migrations.AddField(
            model_name='cropinstance',
            name='scenario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simulation.Scenario'),
        ),
        migrations.AddField(
            model_name='cropinstance',
            name='site',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='CropPcse.PCSESiteParameters'),
        ),
        migrations.AddField(
            model_name='cropinstance',
            name='soil',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='CropPcse.PCSESoilParameters'),
        ),
        migrations.AlterUniqueTogether(
            name='cropinstance',
            unique_together=set([('scenario', 'name')]),
        ),
    ]
