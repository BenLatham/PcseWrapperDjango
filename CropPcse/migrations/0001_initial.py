# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-08-31 15:37
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('simulation', '0014_feed_avaliable'),
    ]

    operations = [
        migrations.CreateModel(
            name='PCSECropParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('WLVGI', models.FloatField()),
                ('WSTI', models.FloatField()),
                ('WRTLI', models.FloatField()),
                ('WSOI', models.FloatField()),
                ('ROOTDI', models.FloatField()),
                ('DVSDR', models.FloatField()),
                ('DVSNLT', models.FloatField()),
                ('DVSNT', models.FloatField()),
                ('FNTRT', models.FloatField()),
                ('FRNX', models.FloatField()),
                ('K', models.FloatField()),
                ('LAICR', models.FloatField()),
                ('LRNR', models.FloatField()),
                ('LSNR', models.FloatField()),
                ('LUE', models.FloatField()),
                ('NFRLVI', models.FloatField()),
                ('NFRRTI', models.FloatField()),
                ('NFRSTI', models.FloatField()),
                ('NLAI', models.FloatField()),
                ('NLUE', models.FloatField()),
                ('NMAXSO', models.FloatField()),
                ('NPART', models.FloatField()),
                ('NSLA', models.FloatField()),
                ('RDRSHM', models.FloatField()),
                ('RGRL', models.FloatField()),
                ('RNFLV', models.FloatField()),
                ('RNFRT', models.FloatField()),
                ('RNFST', models.FloatField()),
                ('ROOTDM', models.FloatField()),
                ('RRDMAX', models.FloatField()),
                ('SLAC', models.FloatField()),
                ('TBASE', models.FloatField()),
                ('TCNT', models.FloatField()),
                ('TRANCO', models.FloatField()),
                ('TSUMAG', models.FloatField()),
                ('TBASEM', models.FloatField()),
                ('TEFFMX', models.FloatField()),
                ('TSUMEM', models.FloatField()),
                ('IDSL', models.IntegerField(choices=[(0, 'temperature'), (1, 'day length'), (2, 'both')])),
                ('DLO', models.FloatField()),
                ('DLC', models.FloatField()),
                ('TSUM1', models.FloatField()),
                ('TSUM2', models.FloatField()),
                ('DVSI', models.IntegerField()),
                ('DVSEND', models.FloatField()),
                ('RDRNS', models.FloatField()),
                ('RDRRT', models.FloatField()),
            ],
            options={
                'verbose_name_plural': 'crop parmeter sets',
            },
        ),
        migrations.CreateModel(
            name='PCSESiteParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('WCI', models.FloatField()),
                ('WCSUBS', models.FloatField()),
                ('WMFAC', models.BooleanField()),
                ('IRRIGF', models.BooleanField()),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simulation.Scenario')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PCSESoilParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('WCAD', models.FloatField()),
                ('WCWP', models.FloatField()),
                ('WCFC', models.FloatField()),
                ('WCWET', models.FloatField()),
                ('WCST', models.FloatField()),
                ('DRATE', models.FloatField()),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simulation.Scenario')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CropParametersDTSMTB',
            fields=[
                ('crop', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='DTSMTB', serialize=False, to='CropPcse.PCSECropParameters')),
                ('a', models.FloatField()),
                ('b', models.FloatField()),
                ('c', models.FloatField()),
                ('d', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CropParametersFLVTB',
            fields=[
                ('crop', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='FLVTB', serialize=False, to='CropPcse.PCSECropParameters')),
                ('a', models.FloatField()),
                ('b', models.FloatField()),
                ('c', models.FloatField()),
                ('d', models.FloatField()),
                ('e', models.FloatField()),
                ('f', models.FloatField()),
                ('g', models.FloatField()),
                ('h', models.FloatField()),
                ('i', models.FloatField()),
                ('j', models.FloatField()),
                ('k', models.FloatField()),
                ('l', models.FloatField()),
                ('m', models.FloatField()),
                ('n', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CropParametersFRTTB',
            fields=[
                ('crop', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='FRTTB', serialize=False, to='CropPcse.PCSECropParameters')),
                ('a', models.FloatField()),
                ('b', models.FloatField()),
                ('c', models.FloatField()),
                ('d', models.FloatField()),
                ('e', models.FloatField()),
                ('f', models.FloatField()),
                ('g', models.FloatField()),
                ('h', models.FloatField()),
                ('i', models.FloatField()),
                ('j', models.FloatField()),
                ('k', models.FloatField()),
                ('l', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CropParametersFSOTB',
            fields=[
                ('crop', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='FSOTB', serialize=False, to='CropPcse.PCSECropParameters')),
                ('a', models.FloatField()),
                ('b', models.FloatField()),
                ('c', models.FloatField()),
                ('d', models.FloatField()),
                ('e', models.FloatField()),
                ('f', models.FloatField()),
                ('g', models.FloatField()),
                ('h', models.FloatField()),
                ('i', models.FloatField()),
                ('j', models.FloatField()),
                ('k', models.FloatField()),
                ('l', models.FloatField()),
                ('m', models.FloatField()),
                ('n', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='CropParametersFSTTB',
            fields=[
                ('crop', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='FSTTB', serialize=False, to='CropPcse.PCSECropParameters')),
                ('a', models.FloatField()),
                ('b', models.FloatField()),
                ('c', models.FloatField()),
                ('d', models.FloatField()),
                ('e', models.FloatField()),
                ('f', models.FloatField()),
                ('g', models.FloatField()),
                ('h', models.FloatField()),
                ('i', models.FloatField()),
                ('j', models.FloatField()),
                ('k', models.FloatField()),
                ('l', models.FloatField()),
                ('m', models.FloatField()),
                ('n', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CropParametersNMXLV',
            fields=[
                ('crop', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='NMXLV', serialize=False, to='CropPcse.PCSECropParameters')),
                ('a', models.FloatField()),
                ('b', models.FloatField()),
                ('c', models.FloatField()),
                ('d', models.FloatField()),
                ('e', models.FloatField()),
                ('f', models.FloatField()),
                ('g', models.FloatField()),
                ('h', models.FloatField()),
                ('i', models.FloatField()),
                ('j', models.FloatField()),
                ('k', models.FloatField()),
                ('l', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CropParametersRDRT',
            fields=[
                ('crop', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='RDRT', serialize=False, to='CropPcse.PCSECropParameters')),
                ('a', models.FloatField()),
                ('b', models.FloatField()),
                ('c', models.FloatField()),
                ('d', models.FloatField()),
                ('e', models.FloatField()),
                ('f', models.FloatField()),
                ('g', models.FloatField()),
                ('h', models.FloatField()),
                ('i', models.FloatField()),
                ('j', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CropParametersSLACF',
            fields=[
                ('crop', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='SLACF', serialize=False, to='CropPcse.PCSECropParameters')),
                ('a', models.FloatField()),
                ('b', models.FloatField()),
                ('c', models.FloatField()),
                ('d', models.FloatField()),
                ('e', models.FloatField()),
                ('f', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='pcsecropparameters',
            name='scenario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simulation.Scenario'),
        ),
        migrations.AlterUniqueTogether(
            name='pcsesoilparameters',
            unique_together=set([('scenario', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='pcsesiteparameters',
            unique_together=set([('scenario', 'name')]),
        ),
    ]
